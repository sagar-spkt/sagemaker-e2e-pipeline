name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        type: choice
        options:
        - sagemaker-e2e-pipeline-prod
        - sagemaker-e2e-pipeline-stage

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Prepare Terraform file with s3 backend in project root directory
    - name: Prepare Terraform Files
      run: |
        echo 'terraform {
          backend "s3" {}
        }' > backend.tf

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      env:
        BACKEND_BUCKET_NAME: ${{ vars.BACKEND_BUCKET_NAME }}
        BACKEND_BUCKET_REGION: ${{ vars.BACKEND_BUCKET_REGION }}
        BACKEND_STATE_KEY: ${{ github.event.inputs.environment }}
      run: |
        terraform init \
        -backend-config="bucket=$BACKEND_BUCKET_NAME" \
        -backend-config="key=$BACKEND_STATE_KEY" \
        -backend-config="region=$BACKEND_BUCKET_REGION" \
        -reconfigure

    # Destroy infrastructure
    - name: Terraform Destroy
      run: |
        terraform destroy \
        -auto-approve